/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("org.divy.java-conventions")
    id("org.gradlex.extra-java-module-info") version "1.1"
}

extraJavaModuleInfo {
    // This does not have to be a complete description (e.g. here 'org.apache.commons.collections' does not export anything here).
    // It only needs to be good enough to work in the context of this application we are building.
    module("commons-beanutils:commons-beanutils", "org.apache.commons.beanutils") {
        exports("org.apache.commons.beanutils")
        requires("org.apache.commons.logging")
    }
    module("commons-collections:commons-collections", "org.apache.commons.collections")
    automaticModule("commons-logging:commons-logging", "org.apache.commons.logging")
    automaticModule("org.glassfish.jersey.containers:jersey-container-servlet", "org.glassfish.jersey.containers.jersey-container-servlet")
    automaticModule("org.glassfish.jersey.containers:jersey-container-servlet-core", "org.glassfish.jersey.containers.jersey-container-servlet-core")
    automaticModule("org.glassfish.jersey.media:jersey-media-json-jackson", "org.glassfish.jersey.media.jersey-media-json-jackson")
    automaticModule("org.glassfish.jersey.ext:jersey-declarative-linking", "org.glassfish.jersey.ext.jersey-declarative-linking")
    automaticModule("org.glassfish.jersey.core:jersey-server", "org.glassfish.jersey.core.jersey-server")
    automaticModule("org.glassfish.jersey.core:jersey-client", "org.glassfish.jersey.core.jersey-client")
    automaticModule("org.glassfish.jersey.ext:jersey-metainf-services", "org.glassfish.jersey.ext.jersey-metainf-services")
    automaticModule("org.glassfish.jersey.core:jersey-common", "org.glassfish.jersey.core.jersey-common")
    automaticModule("org.glassfish.jersey.ext:jersey-entity-filtering", "org.glassfish.jersey.ext.jersey-entity-filtering")
    automaticModule("org.glassfish.hk2:osgi-resource-locator", "org.glassfish.hk2.osgi-resource-locator")
    automaticModule("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5", "com.fasterxml.jackson.datatype.jackson-datatype-hibernate5")
}

dependencies {
    implementation(project(":bo-framework-repository"))
    implementation(project(":bo-framework-businessapi"))
    implementation(project(":bo-framework-core-mapper"))
    implementation(project(":bo-framework-metadata"))
    implementation(project(":bo-framework-dynamic"))
    implementation(project(":bo-framework-query"))
    implementation("cglib:cglib-nodep:3.3.0")
    implementation("org.glassfish.jersey.core:jersey-client:3.1.0")
    implementation("org.glassfish.jersey.media:jersey-media-json-jackson:3.1.0")
    implementation("org.glassfish.jersey.containers:jersey-container-servlet:3.1.0")
    implementation("org.glassfish.jersey.ext:jersey-metainf-services:3.1.0")
    implementation("org.glassfish.jersey.ext:jersey-declarative-linking:3.1.0")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.14.0")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.14.0-rc3")
    implementation("com.fasterxml.jackson.core:jackson-core:2.14.0-rc3")
    implementation("org.slf4j:slf4j-api:2.0.3")
    implementation(project(":bo-framework-endpoint-core"))
    implementation(project(":bo-framework-query"))
    implementation(project(":bo-framework-exception-handling-core"))
    implementation("jakarta.ws.rs:jakarta.ws.rs-api:3.1.0")
    implementation("jakarta.activation:jakarta.activation-api:2.1.0")
    testImplementation(project(":bo-framework-database-mock"))
    testImplementation("org.mockito:mockito-core:4.9.0")
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.1")
    testImplementation("org.hamcrest:hamcrest:2.2")
    compileOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")
}

description = "endpoint-jersey"
